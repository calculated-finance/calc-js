name: Deploy Infrastructure & Applications

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy"
        required: true
        default: "staging"
        type: choice
        options:
          - staging
          - production

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
      image-digest: ${{ steps.build.outputs.digest }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: calc-worker
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/${{ secrets.OIDC_ROLE_NAME }}
          role-session-name: GitHubActions
          aws-region: ap-southeast-1

      - name: Ensure ECR repository exists
        shell: bash
        run: |
          aws ecr describe-repositories --repository-names calc-worker >/dev/null 2>&1 || \
          aws ecr create-repository --repository-name calc-worker >/dev/null

      - name: Login to ECR
        shell: bash
        run: |
          aws ecr get-login-password --region ap-southeast-1 | \
            docker login --username AWS --password-stdin ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.ap-southeast-1.amazonaws.com

      - name: Build Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./packages/worker/Dockerfile
          push: true
          tags: ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.ap-southeast-1.amazonaws.com/calc-worker:${{ github.sha }}
          provenance: false
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Output image URI
        id: out
        shell: bash
        run: |
          echo "image-uri=${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.ap-southeast-1.amazonaws.com/calc-worker:${{ github.sha }}" >> $GITHUB_OUTPUT

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    environment: staging

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy Infrastructure
        uses: ./.github/actions/deploy-infrastructure
        with:
          environment: staging
          aws-account-id: ${{ vars.AWS_ACCOUNT_ID }}
          oidc-role-name: ${{ secrets.OIDC_ROLE_NAME }}
          mnemonic: ${{ secrets.MNEMONIC }}
          chain-id: ${{ vars.CHAIN_ID }}
          container-image: ${{ needs.build.outputs.image-uri }}

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production'
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy Infrastructure
        uses: ./.github/actions/deploy-infrastructure
        with:
          environment: production
          aws-account-id: ${{ vars.AWS_ACCOUNT_ID }}
          oidc-role-name: ${{ secrets.OIDC_ROLE_NAME }}
          mnemonic: ${{ secrets.MNEMONIC }}
          chain-id: ${{ vars.CHAIN_ID }}
          container-image: ${{ needs.build.outputs.image-uri }}
