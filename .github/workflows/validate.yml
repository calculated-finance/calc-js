name: Validate Infrastructure

on:
  pull_request:
    branches: [main]
    paths:
      - "infrastructure/**"
      - "packages/worker/**"
      - ".github/workflows/**"
  push:
    branches-ignore: [main]
    paths:
      - "infrastructure/**"
      - "packages/worker/**"
      - ".github/workflows/**"

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  validate-docker:
    name: Validate Docker Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image (validation only)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./packages/worker/Dockerfile
          push: false
          load: true
          tags: calc-worker:validation
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker image
        run: |
          # Test that the image starts and validates environment variables
          echo "Testing Docker image startup..."
          docker run --rm calc-worker:validation pnpm --version
          echo "✅ Docker image validation passed"

  validate-terraform:
    name: Validate Terraform
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: infrastructure

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ~1.0

      - name: Terraform Format Check
        run: terraform fmt -check -recursive

      - name: Terraform Validate (syntax only)
        run: |
          # Initialize with dummy backend for validation
          terraform init -backend=false
          terraform validate

      - name: Comment Validation Results on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const output = `
            ## 🔍 Terraform Validation Results

            #### Terraform Format and Style 🖌️ \`✅ Passed\`
            #### Terraform Syntax Validation 🤖 \`✅ Passed\`

            *Note: This is syntax-only validation. Full planning with AWS resources will happen during deployment.*

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });
