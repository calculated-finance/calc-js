name: Update AWS Secrets

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to update secrets"
        required: true
        type: choice
        options:
          - staging
          - production
      dry_run:
        description: "Dry run (show current secrets without updating)"
        required: false
        type: boolean
        default: false

permissions:
  id-token: write # Required for OIDC
  contents: read # Required to checkout repo

jobs:
  update-secrets:
    name: Update Secrets in ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.OIDC_ROLE_NAME }}
          role-session-name: GitHubActions-UpdateSecrets-${{ github.event.inputs.environment }}
          aws-region: ap-southeast-1

      - name: Show Current Secrets (Dry Run)
        if: github.event.inputs.dry_run == 'true'
        run: |
          echo "## Current Secrets in AWS Secrets Manager" >> $GITHUB_STEP_SUMMARY
          echo "Environment: ${{ github.event.inputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          SECRET_NAME="calc-${{ github.event.inputs.environment }}-worker-secrets"

          if aws secretsmanager describe-secret --secret-id $SECRET_NAME >/dev/null 2>&1; then
            echo "✅ Secret exists: $SECRET_NAME" >> $GITHUB_STEP_SUMMARY
            
            # Get secret metadata (not the actual values)
            aws secretsmanager describe-secret --secret-id $SECRET_NAME \
              --query '{Name:Name,Description:Description,LastChangedDate:LastChangedDate,LastAccessedDate:LastAccessedDate}' \
              --output table >> $GITHUB_STEP_SUMMARY
              
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Keys in secret:**" >> $GITHUB_STEP_SUMMARY
            aws secretsmanager get-secret-value --secret-id $SECRET_NAME \
              --query 'SecretString' --output text | jq -r 'keys[]' | while read key; do
              echo "- $key" >> $GITHUB_STEP_SUMMARY
            done
          else
            echo "❌ Secret does not exist: $SECRET_NAME" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Update Secrets in AWS Secrets Manager
        if: github.event.inputs.dry_run != 'true'
        run: |
          SECRET_NAME="calc-${{ github.event.inputs.environment }}-worker-secrets"

          # Prepare secret value
          SECRET_VALUE=$(cat <<EOF
          {
            "MNEMONIC": "${{ secrets.MNEMONIC }}",
            "CHAIN_ID": "${{ secrets.CHAIN_ID }}"
          }
          EOF
          )

          echo "Updating secrets for environment: ${{ github.event.inputs.environment }}"

          # Try to update existing secret, create if it doesn't exist
          if aws secretsmanager update-secret \
            --secret-id $SECRET_NAME \
            --secret-string "$SECRET_VALUE" \
            --description "Secrets for CALC ${{ github.event.inputs.environment }} worker containers - Updated from GitHub Actions"; then
            echo "✅ Successfully updated existing secret: $SECRET_NAME"
          else
            echo "Secret doesn't exist, creating new one..."
            aws secretsmanager create-secret \
              --name $SECRET_NAME \
              --description "Secrets for CALC ${{ github.event.inputs.environment }} worker containers" \
              --secret-string "$SECRET_VALUE"
            echo "✅ Successfully created new secret: $SECRET_NAME"
          fi

          # Output summary
          echo "## 🔐 Secrets Update Complete" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: ${{ github.event.inputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Secret Name**: $SECRET_NAME" >> $GITHUB_STEP_SUMMARY
          echo "- **Updated At**: $(date -u)" >> $GITHUB_STEP_SUMMARY
          echo "- **Updated By**: @${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
