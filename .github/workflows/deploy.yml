name: Deploy Infrastructure & Applications

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy"
        required: true
        default: "staging"
        type: choice
        options:
          - staging
          - production

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    outputs:
      image-tar: worker.${{ github.sha }}.tar.gz

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - name: Build Docker Image
        run: |
          docker build -f packages/worker/Dockerfile -t calc-worker:${{ github.sha }} .
          docker save calc-worker:${{ github.sha }} | gzip > worker.${{ github.sha }}.tar.gz

      - name: Save image artifact
        uses: actions/upload-artifact@v4
        with:
          name: worker-image
          path: worker.${{ github.sha }}.tar.gz
          if-no-files-found: error
          retention-days: 1

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    environment: staging

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy Infrastructure
        uses: ./.github/actions/deploy-infrastructure
        with:
          environment: staging
          aws-account-id: ${{ vars.AWS_ACCOUNT_ID }}
          oidc-role-name: ${{ secrets.OIDC_ROLE_NAME }}
          mnemonic: ${{ secrets.MNEMONIC }}
          chain-id: ${{ vars.CHAIN_ID }}

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production'
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy Infrastructure
        uses: ./.github/actions/deploy-infrastructure
        with:
          environment: production
          aws-account-id: ${{ vars.AWS_ACCOUNT_ID }}
          oidc-role-name: ${{ secrets.OIDC_ROLE_NAME }}
          mnemonic: ${{ secrets.MNEMONIC }}
          chain-id: ${{ vars.CHAIN_ID }}
